{
  "address": "0x26e0734042eFb75c9b22B49717c290bccc6807c5",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fees",
          "type": "uint256"
        }
      ],
      "name": "FeesHarvested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFlashFeeRate",
          "type": "uint256"
        }
      ],
      "name": "FlashFeeRateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMaxFlashLoanAmount",
          "type": "uint256"
        }
      ],
      "name": "MaxFlashLoanAmountUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newTreasury",
          "type": "address"
        }
      ],
      "name": "TreasuryUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feesCollected",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "flashFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC3156FlashBorrower",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "flashLoan",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvestFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "maxFlashLoan",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_flashFeeRate",
          "type": "uint256"
        }
      ],
      "name": "setFlashFeeRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxFlashLoanAmount",
          "type": "uint256"
        }
      ],
      "name": "setMaxFlashLoanAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "setTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x0e34375a759fc23cfd7695b53e52082e2e561d9a203c56ee6db6fe31cc676556",
  "receipt": {
    "to": null,
    "from": "0x403898Ddff450b89e2D96BDDcf763541655FDE8B",
    "contractAddress": "0x26e0734042eFb75c9b22B49717c290bccc6807c5",
    "transactionIndex": 10,
    "gasUsed": "1298758",
    "logsBloom": "0x
    "blockHash": "0x8b4e7649ffbe8761ad1bbbc72c43a2bc65242b56397dd27b2caaa3cc1e4fc3eb",
    "transactionHash": "0x0e34375a759fc23cfd7695b53e52082e2e561d9a203c56ee6db6fe31cc676556",
    "logs": [
      {
        "transactionIndex": 10,
        "blockNumber": 10385646,
        "transactionHash": "0x0e34375a759fc23cfd7695b53e52082e2e561d9a203c56ee6db6fe31cc676556",
        "address": "0x26e0734042eFb75c9b22B49717c290bccc6807c5",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000403898ddff450b89e2d96bddcf763541655fde8b"
        ],
        "data": "0x",
        "logIndex": 21,
        "blockHash": "0x8b4e7649ffbe8761ad1bbbc72c43a2bc65242b56397dd27b2caaa3cc1e4fc3eb"
      },
      {
        "transactionIndex": 10,
        "blockNumber": 10385646,
        "transactionHash": "0x0e34375a759fc23cfd7695b53e52082e2e561d9a203c56ee6db6fe31cc676556",
        "address": "0x26e0734042eFb75c9b22B49717c290bccc6807c5",
        "topics": [
          "0x7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d1"
        ],
        "data": "0x000000000000000000000000fe07a76856a6ffd96ddf466dededab1d76355a6b",
        "logIndex": 22,
        "blockHash": "0x8b4e7649ffbe8761ad1bbbc72c43a2bc65242b56397dd27b2caaa3cc1e4fc3eb"
      },
      {
        "transactionIndex": 10,
        "blockNumber": 10385646,
        "transactionHash": "0x0e34375a759fc23cfd7695b53e52082e2e561d9a203c56ee6db6fe31cc676556",
        "address": "0x26e0734042eFb75c9b22B49717c290bccc6807c5",
        "topics": [
          "0xb66167cac191ba19cb545d4623793355b81c0aa009715393bf1a86a28d4c1813"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "logIndex": 23,
        "blockHash": "0x8b4e7649ffbe8761ad1bbbc72c43a2bc65242b56397dd27b2caaa3cc1e4fc3eb"
      },
      {
        "transactionIndex": 10,
        "blockNumber": 10385646,
        "transactionHash": "0x0e34375a759fc23cfd7695b53e52082e2e561d9a203c56ee6db6fe31cc676556",
        "address": "0x26e0734042eFb75c9b22B49717c290bccc6807c5",
        "topics": [
          "0xc5e896318030874c21d8618de38d3347f5d615fa7a421f2c266d27d9966487d1"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "logIndex": 24,
        "blockHash": "0x8b4e7649ffbe8761ad1bbbc72c43a2bc65242b56397dd27b2caaa3cc1e4fc3eb"
      }
    ],
    "blockNumber": 10385646,
    "cumulativeGasUsed": "3284827",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xfE07A76856A6FFD96ddF466DEdedab1d76355A6b"
  ],
  "numDeployments": 1,
  "solcInputHash": "c71c38bb9b435a616663ed98f0058d11",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"name\":\"FeesHarvested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFlashFeeRate\",\"type\":\"uint256\"}],\"name\":\"FlashFeeRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxFlashLoanAmount\",\"type\":\"uint256\"}],\"name\":\"MaxFlashLoanAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesCollected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvestFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_flashFeeRate\",\"type\":\"uint256\"}],\"name\":\"setFlashFeeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxFlashLoanAmount\",\"type\":\"uint256\"}],\"name\":\"setMaxFlashLoanAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"params\":{\"_amount\":\"number of tokens to burn\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"flashFee(address,uint256)\":{\"details\":\"Returns the fee applied when doing flash loans. \",\"params\":{\"_amount\":\"The amount of tokens to be loaned.\",\"_token\":\"The token to be flash loaned.\"},\"returns\":{\"_0\":\"The fees applied to the corresponding flash loan.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Performs a flash loan. New tokens are minted and sent to the `receiver`, who is required to implement the {IERC3156FlashBorrower} interface. By the end of the flash loan, the receiver is expected to own amount + fee tokens and have them approved back to the token contract itself so they can be burned.\",\"params\":{\"amount\":\"The amount of tokens to be loaned.\",\"data\":\"An arbitrary datafield that is passed to the receiver.\",\"receiver\":\"The receiver of the flash loan. Should implement the {IERC3156FlashBorrower.onFlashLoan} interface.\",\"token\":\"The token to be flash loaned. Only `address(this)` is supported.\"},\"returns\":{\"_0\":\"`true` is the flash loan was successful.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"maxFlashLoan(address)\":{\"details\":\"Returns the maximum amount of tokens available for loan.\",\"params\":{\"_token\":\"The address of the token that is requested.\"},\"returns\":{\"_0\":\"The amont of token that can be loaned.\"}},\"mint(address,uint256)\":{\"params\":{\"_amount\":\"number of tokens to recieve\",\"_to\":\"address to receive the tokens\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setFlashFeeRate(uint256)\":{\"params\":{\"_flashFeeRate\":\"the new rate\"}},\"setMaxFlashLoanAmount(uint256)\":{\"params\":{\"_maxFlashLoanAmount\":\"the new amount\"}},\"setTreasury(address)\":{\"params\":{\"_treasury\":\"the new treasury\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"burns _amount of msg.sender's tokens\"},\"harvestFees()\":{\"notice\":\"harvests fees from flash loans to the treasury\"},\"mint(address,uint256)\":{\"notice\":\"mints new tokens to the _to address\"},\"setFlashFeeRate(uint256)\":{\"notice\":\"sets the flash fee rate with precision of 1e5, eg 100 == 0.1%\"},\"setMaxFlashLoanAmount(uint256)\":{\"notice\":\"sets the flash loan cap\"},\"setTreasury(address)\":{\"notice\":\"updates the treasury (where fees are sent)\"}},\"notice\":\"A collateralized debt position token. Protocol assumes this is worth $1.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DebtToken.sol\":\"DebtToken\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC3156.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC3156.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC3156FlashBorrower.sol\\\";\\nimport \\\"./IERC3156FlashLender.sol\\\";\\n\",\"keccak256\":\"0x37da077051cf4b6f30ec15adeca851a7db85dc34173a4cfd033a01f9af0d00c5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC3156FlashBorrower.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC3156 FlashBorrower, as defined in\\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC3156FlashBorrower {\\n    /**\\n     * @dev Receive a flash loan.\\n     * @param initiator The initiator of the loan.\\n     * @param token The loan currency.\\n     * @param amount The amount of tokens lent.\\n     * @param fee The additional amount of tokens to repay.\\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\\n     * @return The keccak256 hash of \\\"ERC3156FlashBorrower.onFlashLoan\\\"\\n     */\\n    function onFlashLoan(\\n        address initiator,\\n        address token,\\n        uint256 amount,\\n        uint256 fee,\\n        bytes calldata data\\n    ) external returns (bytes32);\\n}\\n\",\"keccak256\":\"0xb218fa8b4b52df590ff19b9f6d08b5be7f3abfc168a0ea33f5eb612f8f4dd989\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC3156FlashLender.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC3156FlashBorrower.sol\\\";\\n\\n/**\\n * @dev Interface of the ERC3156 FlashLender, as defined in\\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC3156FlashLender {\\n    /**\\n     * @dev The amount of currency available to be lended.\\n     * @param token The loan currency.\\n     * @return The amount of `token` that can be borrowed.\\n     */\\n    function maxFlashLoan(address token) external view returns (uint256);\\n\\n    /**\\n     * @dev The fee to be charged for a given loan.\\n     * @param token The loan currency.\\n     * @param amount The amount of tokens lent.\\n     * @return The amount of `token` to be charged for the loan, on top of the returned principal.\\n     */\\n    function flashFee(address token, uint256 amount) external view returns (uint256);\\n\\n    /**\\n     * @dev Initiate a flash loan.\\n     * @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\\n     * @param token The loan currency.\\n     * @param amount The amount of tokens lent.\\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\\n     */\\n    function flashLoan(\\n        IERC3156FlashBorrower receiver,\\n        address token,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x0d9159aa6c1a0d8006fb152b0aee46a0f9b8938575ede1a0d7e186b3bc79c8d7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(sender, _msgSender(), currentAllowance - amount);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[sender] = senderBalance - amount;\\n        }\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n\\n        _afterTokenTransfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/ERC20FlashMint.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../../interfaces/IERC3156.sol\\\";\\nimport \\\"../ERC20.sol\\\";\\n\\n/**\\n * @dev Implementation of the ERC3156 Flash loans extension, as defined in\\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\\n *\\n * Adds the {flashLoan} method, which provides flash loan support at the token\\n * level. By default there is no fee, but this can be changed by overriding {flashFee}.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC20FlashMint is ERC20, IERC3156FlashLender {\\n    bytes32 private constant _RETURN_VALUE = keccak256(\\\"ERC3156FlashBorrower.onFlashLoan\\\");\\n\\n    /**\\n     * @dev Returns the maximum amount of tokens available for loan.\\n     * @param token The address of the token that is requested.\\n     * @return The amont of token that can be loaned.\\n     */\\n    function maxFlashLoan(address token) public view override returns (uint256) {\\n        return token == address(this) ? type(uint256).max - ERC20.totalSupply() : 0;\\n    }\\n\\n    /**\\n     * @dev Returns the fee applied when doing flash loans. By default this\\n     * implementation has 0 fees. This function can be overloaded to make\\n     * the flash loan mechanism deflationary.\\n     * @param token The token to be flash loaned.\\n     * @param amount The amount of tokens to be loaned.\\n     * @return The fees applied to the corresponding flash loan.\\n     */\\n    function flashFee(address token, uint256 amount) public view virtual override returns (uint256) {\\n        require(token == address(this), \\\"ERC20FlashMint: wrong token\\\");\\n        // silence warning about unused variable without the addition of bytecode.\\n        amount;\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev Performs a flash loan. New tokens are minted and sent to the\\n     * `receiver`, who is required to implement the {IERC3156FlashBorrower}\\n     * interface. By the end of the flash loan, the receiver is expected to own\\n     * amount + fee tokens and have them approved back to the token contract itself so\\n     * they can be burned.\\n     * @param receiver The receiver of the flash loan. Should implement the\\n     * {IERC3156FlashBorrower.onFlashLoan} interface.\\n     * @param token The token to be flash loaned. Only `address(this)` is\\n     * supported.\\n     * @param amount The amount of tokens to be loaned.\\n     * @param data An arbitrary datafield that is passed to the receiver.\\n     * @return `true` is the flash loan was successful.\\n     */\\n    function flashLoan(\\n        IERC3156FlashBorrower receiver,\\n        address token,\\n        uint256 amount,\\n        bytes calldata data\\n    ) public virtual override returns (bool) {\\n        uint256 fee = flashFee(token, amount);\\n        _mint(address(receiver), amount);\\n        require(\\n            receiver.onFlashLoan(msg.sender, token, amount, fee, data) == _RETURN_VALUE,\\n            \\\"ERC20FlashMint: invalid return value\\\"\\n        );\\n        uint256 currentAllowance = allowance(address(receiver), address(this));\\n        require(currentAllowance >= amount + fee, \\\"ERC20FlashMint: allowance does not allow refund\\\");\\n        _approve(address(receiver), address(this), currentAllowance - amount - fee);\\n        _burn(address(receiver), amount + fee);\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x50e9caaf6a3e2415ea93e2531a8f3a5d7b449f7bc34b595b5738ed82b582744a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/DebtToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n//\\n//        ___           ___           ___           ___\\n//       /\\\\  \\\\         /\\\\  \\\\         /\\\\__\\\\         /\\\\  \\\\\\n//      /::\\\\  \\\\       /::\\\\  \\\\       /:/ _/_       /::\\\\  \\\\\\n//     /:/\\\\:\\\\  \\\\     /:/\\\\:\\\\__\\\\     /:/ /\\\\  \\\\     /:/\\\\:\\\\  \\\\\\n//    /:/ /::\\\\  \\\\   /:/ /:/  /    /:/ /::\\\\  \\\\   /:/  \\\\:\\\\  \\\\\\n//   /:/_/:/\\\\:\\\\__\\\\ /:/_/:/__/___ /:/__\\\\/\\\\:\\\\__\\\\ /:/__/ \\\\:\\\\__\\\\\\n//   \\\\:\\\\/:/  \\\\/__/ \\\\:\\\\/:::::/  / \\\\:\\\\  \\\\ /:/  / \\\\:\\\\  \\\\ /:/  /\\n//    \\\\::/__/       \\\\::/~~/~~~~   \\\\:\\\\  /:/  /   \\\\:\\\\  /:/  /\\n//     \\\\:\\\\  \\\\        \\\\:\\\\~~\\\\        \\\\:\\\\/:/  /     \\\\:\\\\/:/  /\\n//      \\\\:\\\\__\\\\        \\\\:\\\\__\\\\        \\\\::/  /       \\\\::/  /\\n//       \\\\/__/         \\\\/__/         \\\\/__/         \\\\/__/\\n//\\n\\nimport { IERC3156FlashBorrower, IERC3156FlashLender } from \\\"@openzeppelin/contracts/interfaces/IERC3156.sol\\\";\\nimport { ERC20 } from \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport { ERC20FlashMint } from \\\"@openzeppelin/contracts/token/ERC20/extensions/ERC20FlashMint.sol\\\";\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * @notice A collateralized debt position token. Protocol assumes this is worth $1.\\n */\\ncontract DebtToken is ERC20, Ownable, IERC3156FlashLender {\\n    bytes32 private constant _RETURN_VALUE = keccak256(\\\"ERC3156FlashBorrower.onFlashLoan\\\");\\n    uint private maxFlashLoanAmount;\\n    uint private flashFeeRate;\\n    uint public feesCollected;\\n    uint private constant FLASH_FEE_PRECISION = 1e5;\\n    address private treasury;\\n\\n    event FlashFeeRateUpdated(uint newFlashFeeRate);\\n    event MaxFlashLoanAmountUpdated(uint newMaxFlashLoanAmount);\\n    event TreasuryUpdated(address newTreasury);\\n    event FeesHarvested(uint fees);\\n\\n    constructor(address _treasury) ERC20(\\\"Argo Stablecoin\\\", \\\"ARGO\\\") {\\n        require(_treasury != address(0), \\\"DebtToken: 0x0 treasury address\\\");\\n        treasury = _treasury;\\n        maxFlashLoanAmount = 0;\\n        flashFeeRate = 0;\\n\\n        emit TreasuryUpdated(treasury);\\n        emit MaxFlashLoanAmountUpdated(maxFlashLoanAmount);\\n        emit FlashFeeRateUpdated(flashFeeRate);\\n    }\\n\\n    /**\\n     * @notice mints new tokens to the _to address\\n     * @param _to address to receive the tokens\\n     * @param _amount number of tokens to recieve\\n     */\\n    function mint(address _to, uint _amount) external onlyOwner {\\n        _mint(_to, _amount);\\n    }\\n\\n    /**\\n     * @notice burns _amount of msg.sender's tokens\\n     * @param _amount number of tokens to burn\\n     */\\n    function burn(uint _amount) external {\\n        _burn(msg.sender, _amount);\\n    }\\n\\n    ///////////\\n    ///// EIP-3156 flash loan implementation\\n    ///////////\\n\\n    /**\\n     * @dev Returns the maximum amount of tokens available for loan.\\n     * @param _token The address of the token that is requested.\\n     * @return The amont of token that can be loaned.\\n     */\\n    function maxFlashLoan(address _token) public view override returns (uint) {\\n        return _token == address(this) ? maxFlashLoanAmount : 0;\\n    }\\n\\n    /**\\n     * @dev Returns the fee applied when doing flash loans. \\n     * @param _token The token to be flash loaned.\\n     * @param _amount The amount of tokens to be loaned.\\n     * @return The fees applied to the corresponding flash loan.\\n     */\\n    function flashFee(address _token, uint256 _amount) public view override returns (uint256) {\\n        require(_token == address(this), \\\"ERC20FlashMint: wrong token\\\");\\n        return (_amount * flashFeeRate) / FLASH_FEE_PRECISION;\\n    }\\n\\n    /**\\n     * @dev Performs a flash loan. New tokens are minted and sent to the\\n     * `receiver`, who is required to implement the {IERC3156FlashBorrower}\\n     * interface. By the end of the flash loan, the receiver is expected to own\\n     * amount + fee tokens and have them approved back to the token contract itself so\\n     * they can be burned.\\n     * @param receiver The receiver of the flash loan. Should implement the\\n     * {IERC3156FlashBorrower.onFlashLoan} interface.\\n     * @param token The token to be flash loaned. Only `address(this)` is\\n     * supported.\\n     * @param amount The amount of tokens to be loaned.\\n     * @param data An arbitrary datafield that is passed to the receiver.\\n     * @return `true` is the flash loan was successful.\\n     */\\n    function flashLoan(\\n        IERC3156FlashBorrower receiver,\\n        address token,\\n        uint256 amount,\\n        bytes calldata data\\n    ) public override returns (bool) {\\n        require(amount <= maxFlashLoanAmount, \\\"DebtToken: amount above max\\\");\\n        uint256 fee = flashFee(token, amount);\\n        _mint(address(receiver), amount);\\n        require(\\n            receiver.onFlashLoan(msg.sender, token, amount, fee, data) == _RETURN_VALUE,\\n            \\\"DebtToken: invalid return value\\\"\\n        );\\n        uint256 currentAllowance = allowance(address(receiver), address(this));\\n        require(currentAllowance >= amount + fee, \\\"allowance does not allow refund\\\");\\n        _approve(address(receiver), address(this), currentAllowance - amount - fee);\\n        // save gas by burning the fee collected, will mint it again when harvesting\\n        _burn(address(receiver), amount + fee);\\n        feesCollected = feesCollected + fee;\\n        return true;\\n    }\\n\\n    /**\\n     * @notice sets the flash fee rate with precision of 1e5, eg 100 == 0.1%\\n     * @param _flashFeeRate the new rate\\n     */\\n    function setFlashFeeRate(uint _flashFeeRate) external onlyOwner {\\n        require(_flashFeeRate < FLASH_FEE_PRECISION, \\\"DebtToken: rate too high\\\");\\n        flashFeeRate = _flashFeeRate;\\n        emit FlashFeeRateUpdated(flashFeeRate);\\n    }\\n\\n    /**\\n     * @notice sets the flash loan cap\\n     * @param _maxFlashLoanAmount the new amount\\n     */\\n    function setMaxFlashLoanAmount(uint _maxFlashLoanAmount) external onlyOwner {\\n        maxFlashLoanAmount = _maxFlashLoanAmount;\\n        emit MaxFlashLoanAmountUpdated(maxFlashLoanAmount);\\n    }\\n\\n    /**\\n     * @notice updates the treasury (where fees are sent)\\n     * @param _treasury the new treasury\\n     */\\n    function setTreasury(address _treasury) external onlyOwner {\\n        require(_treasury != address(0), \\\"DebtToken: 0x0 treasury address\\\");\\n        treasury = _treasury;\\n        emit TreasuryUpdated(treasury);\\n    }\\n\\n    /**\\n     * @notice harvests fees from flash loans to the treasury\\n     */\\n    function harvestFees() external {\\n        uint fees = feesCollected;\\n        feesCollected = 0;\\n        emit FeesHarvested(fees);\\n\\n        // we burned the fee when we collected it\\n        _mint(treasury, fees);\\n    }\\n}\",\"keccak256\":\"0x798be31e68d14e9ca646443215f47c99bb475855d02026458a041baee8271ed6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620017e7380380620017e78339810160408190526200003491620002eb565b604080518082018252600f81526e20b933b79029ba30b13632b1b7b4b760891b6020808301918252835180850190945260048452634152474f60e01b908401528151919291620000879160039162000245565b5080516200009d90600490602084019062000245565b505050620000ba620000b4620001ef60201b60201c565b620001f3565b6001600160a01b038116620001155760405162461bcd60e51b815260206004820152601f60248201527f44656274546f6b656e3a20307830207472656173757279206164647265737300604482015260640160405180910390fd5b600980546001600160a01b0319166001600160a01b038316908117909155600060068190556007556040519081527f7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d19060200160405180910390a17fb66167cac191ba19cb545d4623793355b81c0aa009715393bf1a86a28d4c1813600654604051620001a491815260200190565b60405180910390a17fc5e896318030874c21d8618de38d3347f5d615fa7a421f2c266d27d9966487d1600754604051620001e091815260200190565b60405180910390a1506200035a565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805462000253906200031d565b90600052602060002090601f016020900481019282620002775760008555620002c2565b82601f106200029257805160ff1916838001178555620002c2565b82800160010185558215620002c2579182015b82811115620002c2578251825591602001919060010190620002a5565b50620002d0929150620002d4565b5090565b5b80821115620002d05760008155600101620002d5565b600060208284031215620002fe57600080fd5b81516001600160a01b03811681146200031657600080fd5b9392505050565b600181811c908216806200033257607f821691505b602082108114156200035457634e487b7160e01b600052602260045260246000fd5b50919050565b61147d806200036a6000396000f3fe608060405234801561001057600080fd5b50600436106101285760003560e01c806306fdde031461012d578063095ea7b31461014b578063138cc18f1461016e57806318160ddd1461017857806323b872dd1461018a578063313ce5671461019d57806339509351146101ac57806340c10f19146101bf57806342966c68146101d25780635cffe9de146101e5578063613255ab146101f857806370a082311461020b578063715018a6146102345780638da5cb5b1461023c57806395d89b411461025157806399c5a4be14610259578063a457c2d71461026c578063a9059cbb1461027f578063d626811b14610292578063d9d98ce4146102a5578063dd62ed3e146102b8578063f071db5a146102cb578063f0f44260146102d4578063f2fde38b146102e7575b600080fd5b6101356102fa565b60405161014291906112c7565b60405180910390f35b61015e61015936600461115b565b61038c565b6040519015158152602001610142565b6101766103a2565b005b6002545b604051908152602001610142565b61015e61019836600461111a565b6103f7565b60405160128152602001610142565b61015e6101ba36600461115b565b6104a6565b6101766101cd36600461115b565b6104e2565b6101766101e036600461123e565b61051f565b61015e6101f33660046111a0565b610529565b61017c6102063660046110c4565b61073d565b61017c6102193660046110c4565b6001600160a01b031660009081526020819052604090205490565b610176610760565b61024461079b565b6040516101429190611257565b6101356107aa565b61017661026736600461123e565b6107b9565b61015e61027a36600461115b565b610824565b61015e61028d36600461115b565b6108bd565b6101766102a036600461123e565b6108ca565b61017c6102b336600461115b565b61097b565b61017c6102c63660046110e1565b6109f6565b61017c60085481565b6101766102e23660046110c4565b610a21565b6101766102f53660046110c4565b610af2565b606060038054610309906113c1565b80601f0160208091040260200160405190810160405280929190818152602001828054610335906113c1565b80156103825780601f1061035757610100808354040283529160200191610382565b820191906000526020600020905b81548152906001019060200180831161036557829003601f168201915b5050505050905090565b6000610399338484610b8f565b50600192915050565b6008805460009091556040518181527ffe8981e94194cbbb8c05bbe9e35d5efd344dea70889a90ca458fd7da74672ec99060200160405180910390a16009546103f4906001600160a01b031682610cb4565b50565b6000610404848484610d81565b6001600160a01b03841660009081526001602090815260408083203384529091529020548281101561048e5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61049b8533858403610b8f565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103999185906104dd908690611351565b610b8f565b336104eb61079b565b6001600160a01b0316146105115760405162461bcd60e51b81526004016104859061131c565b61051b8282610cb4565b5050565b6103f43382610f3e565b600060065484111561057b5760405162461bcd60e51b815260206004820152601b60248201527a088cac4e8a8ded6cadc7440c2dadeeadce840c2c4deecca40dac2f602b1b6044820152606401610485565b6000610587868661097b565b90506105938786610cb4565b6040516323e30c8b60e01b81527f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9906001600160a01b038916906323e30c8b906105eb9033908b908b9088908c908c9060040161126b565b602060405180830381600087803b15801561060557600080fd5b505af1158015610619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063d9190611187565b1461068a5760405162461bcd60e51b815260206004820152601f60248201527f44656274546f6b656e3a20696e76616c69642072657475726e2076616c7565006044820152606401610485565b600061069688306109f6565b90506106a28287611351565b8110156106f15760405162461bcd60e51b815260206004820152601f60248201527f616c6c6f77616e636520646f6573206e6f7420616c6c6f7720726566756e64006044820152606401610485565b61070b8830846107018a866113aa565b6104dd91906113aa565b61071e886107198489611351565b610f3e565b8160085461072c9190611351565b600855506001979650505050505050565b60006001600160a01b038216301461075657600061075a565b6006545b92915050565b3361076961079b565b6001600160a01b03161461078f5760405162461bcd60e51b81526004016104859061131c565b6107996000611072565b565b6005546001600160a01b031690565b606060048054610309906113c1565b336107c261079b565b6001600160a01b0316146107e85760405162461bcd60e51b81526004016104859061131c565b60068190556040518181527fb66167cac191ba19cb545d4623793355b81c0aa009715393bf1a86a28d4c1813906020015b60405180910390a150565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156108a65760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610485565b6108b33385858403610b8f565b5060019392505050565b6000610399338484610d81565b336108d361079b565b6001600160a01b0316146108f95760405162461bcd60e51b81526004016104859061131c565b620186a081106109465760405162461bcd60e51b8152602060048201526018602482015277088cac4e8a8ded6cadc7440e4c2e8ca40e8dede40d0d2ced60431b6044820152606401610485565b60078190556040518181527fc5e896318030874c21d8618de38d3347f5d615fa7a421f2c266d27d9966487d190602001610819565b60006001600160a01b03831630146109d35760405162461bcd60e51b815260206004820152601b60248201527a22a9219918233630b9b426b4b73a1d103bb937b733903a37b5b2b760291b6044820152606401610485565b620186a0600754836109e5919061138b565b6109ef9190611369565b9392505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b33610a2a61079b565b6001600160a01b031614610a505760405162461bcd60e51b81526004016104859061131c565b6001600160a01b038116610aa65760405162461bcd60e51b815260206004820152601f60248201527f44656274546f6b656e3a203078302074726561737572792061646472657373006044820152606401610485565b600980546001600160a01b0319166001600160a01b0383169081179091556040517f7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d19161081991611257565b33610afb61079b565b6001600160a01b031614610b215760405162461bcd60e51b81526004016104859061131c565b6001600160a01b038116610b865760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610485565b6103f481611072565b6001600160a01b038316610bf15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610485565b6001600160a01b038216610c525760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610485565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038216610d0a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610485565b8060026000828254610d1c9190611351565b90915550506001600160a01b03821660009081526020819052604081208054839290610d49908490611351565b90915550506040518181526001600160a01b038316906000906000805160206114288339815191529060200160405180910390a35050565b6001600160a01b038316610de55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610485565b6001600160a01b038216610e475760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610485565b6001600160a01b03831660009081526020819052604090205481811015610ebf5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610485565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610ef6908490611351565b92505081905550826001600160a01b0316846001600160a01b031660008051602061142883398151915284604051610f3091815260200190565b60405180910390a350505050565b6001600160a01b038216610f9e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610485565b6001600160a01b038216600090815260208190526040902054818110156110125760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610485565b6001600160a01b03831660009081526020819052604081208383039055600280548492906110419084906113aa565b90915550506040518281526000906001600160a01b0385169060008051602061142883398151915290602001610ca7565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156110d657600080fd5b81356109ef81611412565b600080604083850312156110f457600080fd5b82356110ff81611412565b9150602083013561110f81611412565b809150509250929050565b60008060006060848603121561112f57600080fd5b833561113a81611412565b9250602084013561114a81611412565b929592945050506040919091013590565b6000806040838503121561116e57600080fd5b823561117981611412565b946020939093013593505050565b60006020828403121561119957600080fd5b5051919050565b6000806000806000608086880312156111b857600080fd5b85356111c381611412565b945060208601356111d381611412565b93506040860135925060608601356001600160401b03808211156111f657600080fd5b818801915088601f83011261120a57600080fd5b81358181111561121957600080fd5b89602082850101111561122b57600080fd5b9699959850939650602001949392505050565b60006020828403121561125057600080fd5b5035919050565b6001600160a01b0391909116815260200190565b6001600160a01b03878116825286166020820152604081018590526060810184905260a06080820181905281018290526000828460c0840137600060c0848401015260c0601f19601f8501168301019050979650505050505050565b600060208083528351808285015260005b818110156112f4578581018301518582016040015282016112d8565b81811115611306576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611364576113646113fc565b500190565b60008261138657634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156113a5576113a56113fc565b500290565b6000828210156113bc576113bc6113fc565b500390565b600181811c908216806113d557607f821691505b602082108114156113f657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146103f457600080fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212203a20083de2f8085c0c2ba6653abc73c6f961ad327eb77d2405f0c8b1c991f9d564736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101285760003560e01c806306fdde031461012d578063095ea7b31461014b578063138cc18f1461016e57806318160ddd1461017857806323b872dd1461018a578063313ce5671461019d57806339509351146101ac57806340c10f19146101bf57806342966c68146101d25780635cffe9de146101e5578063613255ab146101f857806370a082311461020b578063715018a6146102345780638da5cb5b1461023c57806395d89b411461025157806399c5a4be14610259578063a457c2d71461026c578063a9059cbb1461027f578063d626811b14610292578063d9d98ce4146102a5578063dd62ed3e146102b8578063f071db5a146102cb578063f0f44260146102d4578063f2fde38b146102e7575b600080fd5b6101356102fa565b60405161014291906112c7565b60405180910390f35b61015e61015936600461115b565b61038c565b6040519015158152602001610142565b6101766103a2565b005b6002545b604051908152602001610142565b61015e61019836600461111a565b6103f7565b60405160128152602001610142565b61015e6101ba36600461115b565b6104a6565b6101766101cd36600461115b565b6104e2565b6101766101e036600461123e565b61051f565b61015e6101f33660046111a0565b610529565b61017c6102063660046110c4565b61073d565b61017c6102193660046110c4565b6001600160a01b031660009081526020819052604090205490565b610176610760565b61024461079b565b6040516101429190611257565b6101356107aa565b61017661026736600461123e565b6107b9565b61015e61027a36600461115b565b610824565b61015e61028d36600461115b565b6108bd565b6101766102a036600461123e565b6108ca565b61017c6102b336600461115b565b61097b565b61017c6102c63660046110e1565b6109f6565b61017c60085481565b6101766102e23660046110c4565b610a21565b6101766102f53660046110c4565b610af2565b606060038054610309906113c1565b80601f0160208091040260200160405190810160405280929190818152602001828054610335906113c1565b80156103825780601f1061035757610100808354040283529160200191610382565b820191906000526020600020905b81548152906001019060200180831161036557829003601f168201915b5050505050905090565b6000610399338484610b8f565b50600192915050565b6008805460009091556040518181527ffe8981e94194cbbb8c05bbe9e35d5efd344dea70889a90ca458fd7da74672ec99060200160405180910390a16009546103f4906001600160a01b031682610cb4565b50565b6000610404848484610d81565b6001600160a01b03841660009081526001602090815260408083203384529091529020548281101561048e5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61049b8533858403610b8f565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103999185906104dd908690611351565b610b8f565b336104eb61079b565b6001600160a01b0316146105115760405162461bcd60e51b81526004016104859061131c565b61051b8282610cb4565b5050565b6103f43382610f3e565b600060065484111561057b5760405162461bcd60e51b815260206004820152601b60248201527a088cac4e8a8ded6cadc7440c2dadeeadce840c2c4deecca40dac2f602b1b6044820152606401610485565b6000610587868661097b565b90506105938786610cb4565b6040516323e30c8b60e01b81527f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9906001600160a01b038916906323e30c8b906105eb9033908b908b9088908c908c9060040161126b565b602060405180830381600087803b15801561060557600080fd5b505af1158015610619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063d9190611187565b1461068a5760405162461bcd60e51b815260206004820152601f60248201527f44656274546f6b656e3a20696e76616c69642072657475726e2076616c7565006044820152606401610485565b600061069688306109f6565b90506106a28287611351565b8110156106f15760405162461bcd60e51b815260206004820152601f60248201527f616c6c6f77616e636520646f6573206e6f7420616c6c6f7720726566756e64006044820152606401610485565b61070b8830846107018a866113aa565b6104dd91906113aa565b61071e886107198489611351565b610f3e565b8160085461072c9190611351565b600855506001979650505050505050565b60006001600160a01b038216301461075657600061075a565b6006545b92915050565b3361076961079b565b6001600160a01b03161461078f5760405162461bcd60e51b81526004016104859061131c565b6107996000611072565b565b6005546001600160a01b031690565b606060048054610309906113c1565b336107c261079b565b6001600160a01b0316146107e85760405162461bcd60e51b81526004016104859061131c565b60068190556040518181527fb66167cac191ba19cb545d4623793355b81c0aa009715393bf1a86a28d4c1813906020015b60405180910390a150565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156108a65760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610485565b6108b33385858403610b8f565b5060019392505050565b6000610399338484610d81565b336108d361079b565b6001600160a01b0316146108f95760405162461bcd60e51b81526004016104859061131c565b620186a081106109465760405162461bcd60e51b8152602060048201526018602482015277088cac4e8a8ded6cadc7440e4c2e8ca40e8dede40d0d2ced60431b6044820152606401610485565b60078190556040518181527fc5e896318030874c21d8618de38d3347f5d615fa7a421f2c266d27d9966487d190602001610819565b60006001600160a01b03831630146109d35760405162461bcd60e51b815260206004820152601b60248201527a22a9219918233630b9b426b4b73a1d103bb937b733903a37b5b2b760291b6044820152606401610485565b620186a0600754836109e5919061138b565b6109ef9190611369565b9392505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b33610a2a61079b565b6001600160a01b031614610a505760405162461bcd60e51b81526004016104859061131c565b6001600160a01b038116610aa65760405162461bcd60e51b815260206004820152601f60248201527f44656274546f6b656e3a203078302074726561737572792061646472657373006044820152606401610485565b600980546001600160a01b0319166001600160a01b0383169081179091556040517f7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d19161081991611257565b33610afb61079b565b6001600160a01b031614610b215760405162461bcd60e51b81526004016104859061131c565b6001600160a01b038116610b865760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610485565b6103f481611072565b6001600160a01b038316610bf15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610485565b6001600160a01b038216610c525760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610485565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038216610d0a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610485565b8060026000828254610d1c9190611351565b90915550506001600160a01b03821660009081526020819052604081208054839290610d49908490611351565b90915550506040518181526001600160a01b038316906000906000805160206114288339815191529060200160405180910390a35050565b6001600160a01b038316610de55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610485565b6001600160a01b038216610e475760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610485565b6001600160a01b03831660009081526020819052604090205481811015610ebf5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610485565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610ef6908490611351565b92505081905550826001600160a01b0316846001600160a01b031660008051602061142883398151915284604051610f3091815260200190565b60405180910390a350505050565b6001600160a01b038216610f9e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610485565b6001600160a01b038216600090815260208190526040902054818110156110125760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610485565b6001600160a01b03831660009081526020819052604081208383039055600280548492906110419084906113aa565b90915550506040518281526000906001600160a01b0385169060008051602061142883398151915290602001610ca7565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156110d657600080fd5b81356109ef81611412565b600080604083850312156110f457600080fd5b82356110ff81611412565b9150602083013561110f81611412565b809150509250929050565b60008060006060848603121561112f57600080fd5b833561113a81611412565b9250602084013561114a81611412565b929592945050506040919091013590565b6000806040838503121561116e57600080fd5b823561117981611412565b946020939093013593505050565b60006020828403121561119957600080fd5b5051919050565b6000806000806000608086880312156111b857600080fd5b85356111c381611412565b945060208601356111d381611412565b93506040860135925060608601356001600160401b03808211156111f657600080fd5b818801915088601f83011261120a57600080fd5b81358181111561121957600080fd5b89602082850101111561122b57600080fd5b9699959850939650602001949392505050565b60006020828403121561125057600080fd5b5035919050565b6001600160a01b0391909116815260200190565b6001600160a01b03878116825286166020820152604081018590526060810184905260a06080820181905281018290526000828460c0840137600060c0848401015260c0601f19601f8501168301019050979650505050505050565b600060208083528351808285015260005b818110156112f4578581018301518582016040015282016112d8565b81811115611306576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611364576113646113fc565b500190565b60008261138657634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156113a5576113a56113fc565b500290565b6000828210156113bc576113bc6113fc565b500390565b600181811c908216806113d557607f821691505b602082108114156113f657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146103f457600080fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212203a20083de2f8085c0c2ba6653abc73c6f961ad327eb77d2405f0c8b1c991f9d564736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "params": {
          "_amount": "number of tokens to burn"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "flashFee(address,uint256)": {
        "details": "Returns the fee applied when doing flash loans. ",
        "params": {
          "_amount": "The amount of tokens to be loaned.",
          "_token": "The token to be flash loaned."
        },
        "returns": {
          "_0": "The fees applied to the corresponding flash loan."
        }
      },
      "flashLoan(address,address,uint256,bytes)": {
        "details": "Performs a flash loan. New tokens are minted and sent to the `receiver`, who is required to implement the {IERC3156FlashBorrower} interface. By the end of the flash loan, the receiver is expected to own amount + fee tokens and have them approved back to the token contract itself so they can be burned.",
        "params": {
          "amount": "The amount of tokens to be loaned.",
          "data": "An arbitrary datafield that is passed to the receiver.",
          "receiver": "The receiver of the flash loan. Should implement the {IERC3156FlashBorrower.onFlashLoan} interface.",
          "token": "The token to be flash loaned. Only `address(this)` is supported."
        },
        "returns": {
          "_0": "`true` is the flash loan was successful."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "maxFlashLoan(address)": {
        "details": "Returns the maximum amount of tokens available for loan.",
        "params": {
          "_token": "The address of the token that is requested."
        },
        "returns": {
          "_0": "The amont of token that can be loaned."
        }
      },
      "mint(address,uint256)": {
        "params": {
          "_amount": "number of tokens to recieve",
          "_to": "address to receive the tokens"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setFlashFeeRate(uint256)": {
        "params": {
          "_flashFeeRate": "the new rate"
        }
      },
      "setMaxFlashLoanAmount(uint256)": {
        "params": {
          "_maxFlashLoanAmount": "the new amount"
        }
      },
      "setTreasury(address)": {
        "params": {
          "_treasury": "the new treasury"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "burn(uint256)": {
        "notice": "burns _amount of msg.sender's tokens"
      },
      "harvestFees()": {
        "notice": "harvests fees from flash loans to the treasury"
      },
      "mint(address,uint256)": {
        "notice": "mints new tokens to the _to address"
      },
      "setFlashFeeRate(uint256)": {
        "notice": "sets the flash fee rate with precision of 1e5, eg 100 == 0.1%"
      },
      "setMaxFlashLoanAmount(uint256)": {
        "notice": "sets the flash loan cap"
      },
      "setTreasury(address)": {
        "notice": "updates the treasury (where fees are sent)"
      }
    },
    "notice": "A collateralized debt position token. Protocol assumes this is worth $1.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 428,
        "contract": "contracts/DebtToken.sol:DebtToken",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 434,
        "contract": "contracts/DebtToken.sol:DebtToken",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 436,
        "contract": "contracts/DebtToken.sol:DebtToken",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 438,
        "contract": "contracts/DebtToken.sol:DebtToken",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 440,
        "contract": "contracts/DebtToken.sol:DebtToken",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 7,
        "contract": "contracts/DebtToken.sol:DebtToken",
        "label": "_owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 3454,
        "contract": "contracts/DebtToken.sol:DebtToken",
        "label": "maxFlashLoanAmount",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 3456,
        "contract": "contracts/DebtToken.sol:DebtToken",
        "label": "flashFeeRate",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 3458,
        "contract": "contracts/DebtToken.sol:DebtToken",
        "label": "feesCollected",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 3463,
        "contract": "contracts/DebtToken.sol:DebtToken",
        "label": "treasury",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}